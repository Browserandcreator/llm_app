{"ast":null,"code":"var _jsxFileName = \"D:\\\\llm_app-1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//这好多啊\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\n//自定义组件，侧边栏和聊天区域\nimport Sidebar from './components/Sidebar';\nimport ChatArea from './components/ChatArea';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    background: {\n      default: '#f5f5f5'\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  useEffect(() => {\n    // 初始化一个新对话\n    if (conversations.length === 0) {\n      const newConversationId = uuidv4();\n      setConversations([{\n        id: newConversationId,\n        title: '新的旅游规划',\n        messages: []\n      }]);\n      setCurrentConversationId(newConversationId);\n    }\n  }, [conversations]);\n  const handleNewConversation = () => {\n    const newConversationId = uuidv4();\n    setConversations([...conversations, {\n      id: newConversationId,\n      title: '新的旅游规划',\n      messages: []\n    }]);\n    setCurrentConversationId(newConversationId);\n  };\n  const handleSelectConversation = id => {\n    setCurrentConversationId(id);\n  };\n  const handleDeleteConversation = id => {\n    const updatedConversations = conversations.filter(conv => conv.id !== id);\n    setConversations(updatedConversations);\n    if (currentConversationId === id && updatedConversations.length > 0) {\n      setCurrentConversationId(updatedConversations[0].id);\n    } else if (updatedConversations.length === 0) {\n      handleNewConversation();\n    }\n  };\n  const handleSendMessage = async message => {\n    if (!message.trim()) return;\n    const currentConversation = conversations.find(conv => conv.id === currentConversationId);\n    if (!currentConversation) return;\n\n    // 添加用户消息\n    const userMessage = {\n      id: uuidv4(),\n      content: message,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n\n    // 更新对话标题（如果是第一条消息）\n    let updatedTitle = currentConversation.title;\n    if (currentConversation.messages.length === 0) {\n      updatedTitle = message.length > 20 ? `${message.substring(0, 20)}...` : message;\n    }\n\n    // 更新对话\n    const updatedConversations = conversations.map(conv => {\n      if (conv.id === currentConversationId) {\n        return {\n          ...conv,\n          title: updatedTitle,\n          messages: [...conv.messages, userMessage]\n        };\n      }\n      return conv;\n    });\n    setConversations(updatedConversations);\n    try {\n      // 显示加载中消息\n      const loadingMessageId = uuidv4();\n      const loadingMessage = {\n        id: loadingMessageId,\n        content: '正在生成旅游规划...',\n        sender: 'assistant',\n        isLoading: true,\n        timestamp: new Date().toISOString()\n      };\n      setConversations(prevConversations => {\n        return prevConversations.map(conv => {\n          if (conv.id === currentConversationId) {\n            return {\n              ...conv,\n              messages: [...conv.messages, loadingMessage]\n            };\n          }\n          return conv;\n        });\n      });\n\n      // 调用API获取回复\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message,\n          conversationId: currentConversationId,\n          messages: updatedConversations.find(conv => conv.id === currentConversationId).messages\n        })\n      });\n      if (!response.ok) {\n        throw new Error('网络请求失败');\n      }\n      const data = await response.json();\n\n      // 替换加载中消息为实际回复\n      const assistantMessage = {\n        id: uuidv4(),\n        content: data.reply,\n        sender: 'assistant',\n        timestamp: new Date().toISOString()\n      };\n      setConversations(prevConversations => {\n        return prevConversations.map(conv => {\n          if (conv.id === currentConversationId) {\n            return {\n              ...conv,\n              messages: conv.messages.map(msg => msg.id === loadingMessageId ? assistantMessage : msg)\n            };\n          }\n          return conv;\n        });\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // 更新加载消息为错误消息\n      setConversations(prevConversations => {\n        return prevConversations.map(conv => {\n          if (conv.id === currentConversationId) {\n            return {\n              ...conv,\n              messages: conv.messages.map(msg => {\n                if (msg.isLoading) {\n                  return {\n                    ...msg,\n                    content: '抱歉，生成旅游规划时出现错误。请稍后再试。',\n                    isLoading: false,\n                    isError: true\n                  };\n                }\n                return msg;\n              })\n            };\n          }\n          return conv;\n        });\n      });\n    }\n  };\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const currentConversation = conversations.find(conv => conv.id === currentConversationId) || {\n    messages: []\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        conversations: conversations,\n        currentConversationId: currentConversationId,\n        onNewConversation: handleNewConversation,\n        onSelectConversation: handleSelectConversation,\n        onDeleteConversation: handleDeleteConversation,\n        isOpen: isSidebarOpen,\n        toggleSidebar: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n        messages: currentConversation.messages,\n        onSendMessage: handleSendMessage,\n        isSidebarOpen: isSidebarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7wjKkkYjwMFpXxk4xlzH+wHWgak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","createTheme","CssBaseline","Box","Sidebar","ChatArea","v4","uuidv4","jsxDEV","_jsxDEV","theme","palette","primary","main","background","default","App","_s","conversations","setConversations","currentConversationId","setCurrentConversationId","isSidebarOpen","setIsSidebarOpen","length","newConversationId","id","title","messages","handleNewConversation","handleSelectConversation","handleDeleteConversation","updatedConversations","filter","conv","handleSendMessage","message","trim","currentConversation","find","userMessage","content","sender","timestamp","Date","toISOString","updatedTitle","substring","map","loadingMessageId","loadingMessage","isLoading","prevConversations","response","fetch","method","headers","body","JSON","stringify","conversationId","ok","Error","data","json","assistantMessage","reply","msg","error","console","isError","toggleSidebar","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onNewConversation","onSelectConversation","onDeleteConversation","isOpen","onSendMessage","_c","$RefreshReg$"],"sources":["D:/llm_app-1/frontend/src/App.js"],"sourcesContent":["//这好多啊\nimport React, { useState, useEffect } from 'react'; \nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\n//自定义组件，侧边栏和聊天区域\nimport Sidebar from './components/Sidebar';\nimport ChatArea from './components/ChatArea';\n\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n});\n\nfunction App() {\n  const [conversations, setConversations] = useState([]);\n  const [currentConversationId, setCurrentConversationId] = useState(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  useEffect(() => {\n    // 初始化一个新对话\n    if (conversations.length === 0) {\n      const newConversationId = uuidv4();\n      setConversations([{\n        id: newConversationId,\n        title: '新的旅游规划',\n        messages: []\n      }]);\n      setCurrentConversationId(newConversationId);\n    }\n  }, [conversations]);\n\n  const handleNewConversation = () => {\n    const newConversationId = uuidv4();\n    setConversations([...conversations, {\n      id: newConversationId,\n      title: '新的旅游规划',\n      messages: []\n    }]);\n    setCurrentConversationId(newConversationId);\n  };\n\n  const handleSelectConversation = (id) => {\n    setCurrentConversationId(id);\n  };\n\n  const handleDeleteConversation = (id) => {\n    const updatedConversations = conversations.filter(conv => conv.id !== id);\n    setConversations(updatedConversations);\n    \n    if (currentConversationId === id && updatedConversations.length > 0) {\n      setCurrentConversationId(updatedConversations[0].id);\n    } else if (updatedConversations.length === 0) {\n      handleNewConversation();\n    }\n  };\n\n  const handleSendMessage = async (message) => {\n    if (!message.trim()) return;\n\n    const currentConversation = conversations.find(conv => conv.id === currentConversationId);\n    if (!currentConversation) return;\n\n    // 添加用户消息\n    const userMessage = {\n      id: uuidv4(),\n      content: message,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n\n    // 更新对话标题（如果是第一条消息）\n    let updatedTitle = currentConversation.title;\n    if (currentConversation.messages.length === 0) {\n      updatedTitle = message.length > 20 ? `${message.substring(0, 20)}...` : message;\n    }\n\n    // 更新对话\n    const updatedConversations = conversations.map(conv => {\n      if (conv.id === currentConversationId) {\n        return {\n          ...conv,\n          title: updatedTitle,\n          messages: [...conv.messages, userMessage]\n        };\n      }\n      return conv;\n    });\n\n    setConversations(updatedConversations);\n\n    try {\n      // 显示加载中消息\n      const loadingMessageId = uuidv4();\n      const loadingMessage = {\n        id: loadingMessageId,\n        content: '正在生成旅游规划...',\n        sender: 'assistant',\n        isLoading: true,\n        timestamp: new Date().toISOString()\n      };\n\n      setConversations(prevConversations => {\n        return prevConversations.map(conv => {\n          if (conv.id === currentConversationId) {\n            return {\n              ...conv,\n              messages: [...conv.messages, loadingMessage]\n            };\n          }\n          return conv;\n        });\n      });\n\n      // 调用API获取回复\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message,\n          conversationId: currentConversationId,\n          messages: updatedConversations.find(conv => conv.id === currentConversationId).messages\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('网络请求失败');\n      }\n\n      const data = await response.json();\n\n      // 替换加载中消息为实际回复\n      const assistantMessage = {\n        id: uuidv4(),\n        content: data.reply,\n        sender: 'assistant',\n        timestamp: new Date().toISOString()\n      };\n\n      setConversations(prevConversations => {\n        return prevConversations.map(conv => {\n          if (conv.id === currentConversationId) {\n            return {\n              ...conv,\n              messages: conv.messages.map(msg => \n                msg.id === loadingMessageId ? assistantMessage : msg\n              )\n            };\n          }\n          return conv;\n        });\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // 更新加载消息为错误消息\n      setConversations(prevConversations => {\n        return prevConversations.map(conv => {\n          if (conv.id === currentConversationId) {\n            return {\n              ...conv,\n              messages: conv.messages.map(msg => {\n                if (msg.isLoading) {\n                  return {\n                    ...msg,\n                    content: '抱歉，生成旅游规划时出现错误。请稍后再试。',\n                    isLoading: false,\n                    isError: true\n                  };\n                }\n                return msg;\n              })\n            };\n          }\n          return conv;\n        });\n      });\n    }\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const currentConversation = conversations.find(conv => conv.id === currentConversationId) || { messages: [] };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box className=\"app-container\">\n        <Sidebar \n          conversations={conversations}\n          currentConversationId={currentConversationId}\n          onNewConversation={handleNewConversation}\n          onSelectConversation={handleSelectConversation}\n          onDeleteConversation={handleDeleteConversation}\n          isOpen={isSidebarOpen}\n          toggleSidebar={toggleSidebar}\n        />\n        <ChatArea \n          messages={currentConversation.messages}\n          onSendMessage={handleSendMessage}\n          isSidebarOpen={isSidebarOpen}\n        />\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}